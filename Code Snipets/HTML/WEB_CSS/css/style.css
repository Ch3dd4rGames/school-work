/* Para definir variables de CSS usaremos el selector :root (que selecciona el elemento raíz del documento html) y dentro del selector podremos definir variables con un valor */

:root
{
    --slide-time: 12s;
    --wario-yellow: #ffff3f;
}

/* Podemos cargar también las tipografías de Google Fonts directamente en el CSS con la regla @import */

/* @import url('https://fonts.googleapis.com/css2?family=Carter+One&display=swap') */

/* La regla especial @font-face me permite cargar una tipografía desde un archivo local y asignarle un nombre mediante la propiedad font-family */
@font-face {
    /* El nombre que le damos a la tipografía que cargamos */
    font-family: "SuperMarioBros.";
    src: url(../fonts/Super\ Mario\ Bros..ttf);
}

*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    scroll-behavior: smooth;
}

body
{
    color: blueviolet;
    background-color: var(--wario-yellow);

    animation-name: changeBGColor;
    animation-duration: 3s;
    /* animation-delay: 1s; */
    animation-iteration-count: infinite;
    animation-direction: alternate;
}

/* ANIMACIÓN PARA CAMBIAR EL COLOR DE FONDO DE LA WEB (DEL BODY) */
@keyframes changeBGColor
{
    0%
    {
        background-color: aqua;
    }

    50%
    {
        background-color: blueviolet;
    }

    100%
    {
        background-color: rgb(255, 0, 0);
    }
}

/* Selector muy general para todas las imágenes de la web para que se adapten al contenedor que las contiene */
img
{
    width: 100%;
    height: auto;
    vertical-align: middle;
}

.menu-cont
{
    padding: 24px;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    background-color: blueviolet;
}

.menu-cont > a
{
    display: block;
    width: 100%;
}

nav
{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    color: var(--wario-yellow)
}

nav .menu-opt
{
    list-style: none;
    display: flex;
    align-items: center;
    gap: 20px;
}

/* Este checkbox permanecerá oculto siempre, aunque será el que me permita detectar si se tiene que ver u ocultar el menú */
#menuToggle
{
    display: none;
}

/* Estado en reposo */
nav ul a
{
    display: block;
    font-weight: bold;
    color: var(--wario-yellow);
    text-decoration: none;
    transition: 0.3s;
}

/* Estado alterado hover */
nav ul a:hover
{
    color: #b9b92d;
    transform: scale(1.1) rotate(15deg);
}

/* nav ul a:visited
{
    color: aqua;
} */

button
{
    padding: 10px 15px;
    background-color: var(--wario-yellow);
    font-size: 1.25em;
    font-weight: bold;
    color: blueviolet;
    border: none;
    border-radius: 8px;
    transition: 0.3s;
}

button:hover
{
    background-color: #b9b92d;
    cursor: pointer;
    transform: scale(1.1) rotate(-10deg);
}

/* Podemos crear selectores y clases específicas para aplicar la fuente o usar la propiedad font-family en los selectores que ya tengamos creados */
.carter-one
{
    font-family: 'Carter One', sans-serif;
    font-weight: 400;
    font-style: normal;
}

header
{
    /* El 50% del alto del viewport */
    height: 50vh;
    /* width: 100vw; */
    
    background-color: aliceblue;
    padding: 50px;
    border: 5px blue solid;
    margin: 100px;

    /* background-image: url(../Media/Image/Wario.webp);
    background-size: cover;
    background-position: center; */

    /* background-image: linear-gradient(to top, yellow, blueviolet);
    background: rgb(63, 94, 251);
    background: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(252, 70, 107, 1) 100%); */

    background-color: #f2df11;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='18' viewBox='0 0 100 18'%3E%3Cpath fill='%23d414ed' fill-opacity='0.84' d='M61.82 18c3.47-1.45 6.86-3.78 11.3-7.34C78 6.76 80.34 5.1 83.87 3.42 88.56 1.16 93.75 0 100 0v6.16C98.76 6.05 97.43 6 96 6c-9.59 0-14.23 2.23-23.13 9.34-1.28 1.03-2.39 1.9-3.4 2.66h-7.65zm-23.64 0H22.52c-1-.76-2.1-1.63-3.4-2.66C11.57 9.3 7.08 6.78 0 6.16V0c6.25 0 11.44 1.16 16.14 3.42 3.53 1.7 5.87 3.35 10.73 7.24 4.45 3.56 7.84 5.9 11.31 7.34zM61.82 0h7.66a39.57 39.57 0 0 1-7.34 4.58C57.44 6.84 52.25 8 46 8S34.56 6.84 29.86 4.58A39.57 39.57 0 0 1 22.52 0h15.66C41.65 1.44 45.21 2 50 2c4.8 0 8.35-.56 11.82-2z'%3E%3C/path%3E%3C/svg%3E");
}

/* header:hover
{
    box-shadow: 3px 3px 3px 3px black;
} */

header:hover h1
{
    font-size: 54px;
    text-shadow: 2px 2px 2px black;
}

h1
{
    width: fit-content;
    font-size: 64px;
    color: red;
    font-family: "SuperMarioBros.";

    background-image: linear-gradient(rgb(0, 0, 0), blueviolet);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

h2
{
    color: green;
}

p
{
    color: blue;
}

#about_me
{
    padding: 50px;
}

#about_me div:first-child
{
    padding: 10px;
    width: 75%;
}

#about_me div:last-child
{
    padding: 20px;
}

#about_me div:nth-child(2)
{
    padding: 15px;
    text-align: justify;
}

#about_me div image
{
    box-shadow: 8px 9px 11px black;
}

#about_me_title
{
    color: aqua;
}

.pr-text
{
    color: chartreuse;
}

.big-text
{
    font-size: 36px;
}

/* pseudo-elementos */
/* #about_me > div:first-child:before, 
#about_me > div:first-child:after
{
    content: "";
    display: block;
    width: 50px;
    height: 50px;
    background-color: blueviolet;
} */

/* #my_enemies > p
{
    
} */

/* Seleccionamos la imagen de Wario en la sección about_me */
#about_me > div > img
{
    display: block;
    width: 50%;
    /* Se posiciona a la derecha */
    /* margin-left: auto; */

    /* Para centrar un elemento de forma automática */
    margin: auto;
}

#my_enemies
{
    padding: 50px;
}

/* GALERIA DE IMAGENES */

#my_enemies .gallery ul
{
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;
    gap: 12px;
}

/* Hijos flexbox (contenedores de la imágenes) */
#my_enemies .gallery ul li
{
    height: 35vh;
    /* Para que los hijos flexbox crezcan todo el tamaño que puedan ocupar dentro de la fila */
    flex-grow: 1;
    position: relative;
}

#my_enemies .gallery ul li img
{
    max-height: 100%;
    min-width: 100%;
    /* Esta propiedad me permite indicarle a la imagen como se debe adaptar al contenedor. Con el valor cover se adaptará al ancho del contenedor */
    object-fit: cover;
    vertical-align: bottom;
}

#my_enemies .gallery ul li .overlay
{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(137, 43, 226, 0.5);

    display: flex;
    justify-content: center;
    align-items: center;

    opacity: 0;
    transform: scale(0);
    transition: 0.3s;
}

#my_enemies .gallery ul li:hover .overlay
{
    opacity: 1;
    transform: scale(1);
}

#my_enemies .gallery ul li .overlay span
{
    color: aliceblue;
    font-size: 1.25em;
    font-weight: bold;
}

#my_friends
{
    display: flex;
    justify-content: center;
    align-items: center;
}

/* SLIDESHOW */

#slide_container
{
    max-width: 800px;
    position: relative;
}

.slide-element-1
{
    display: block;
    width: 100%;
    height: auto;
}

.slide-element-2, .slide-element-3
{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

/* Si tenemos más slide tendríamos que añadir más selectores */
@keyframes fade-1
{
    0% { opacity: 1; }
    33% { opacity: 0; }
    66% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes fade-2
{
    0% { opacity: 0; }
    33% { opacity: 1; }
    66% { opacity: 0; }
    100% { opacity: 0; }
}

@keyframes fade-3
{
    0% { opacity: 0; }
    33% { opacity: 0; }
    66% { opacity: 1; }
    100% { opacity: 0; }
}

.slide-image
{
    width: 100%;
    border-radius: 20px;
}

.slide-text
{
    position: absolute;
    bottom: 10px;
    width: 100%;
    text-align: center;
    color: aliceblue;
}

/* MEDIA QUERY */
/* Dentro de los paréntesis definimos el "break-point" que será una medida en píxeles donde indicaremos cuando se debe activar el código que contiene el media-query */

/* TABLET */

@media only screen and (max-width: 900px) 
{
    body
    {
        background-color: aqua;
    }

    header
    {
        margin: 42px;
        padding: 25px;
    }

    #about_me > div > img 
    {
        width: 100%;
    }

    /* Menú hamburguesa */
    .menu-cont, .menu-cont nav
    {
        display: block;
    }

    .menu-cont .menu-icon
    {
        display: block;
        position: absolute;
        top: 45px;
        right: 20px;
    }

    .menu-cont .menu-icon i
    {
        font-size: 2em;
    }

    .menu-opt
    {
        flex-direction: column;
        max-height: 0;
        overflow: hidden;
        transition: 0.35s;
    }

    /* Este selector seleccionará el #menu (el <ul>) solo cuando el input checkbox esté checkeado */
    #menuToggle:checked ~ .menu-opt
    {
        max-height: 350px;
    }
    /* Para escribir ~ en WIN -> AltGr+4 (y luego un espacio) */
}

/* MOBILE */

@media only screen and (max-width: 450px) 
{
    /* Podemos cambiar el color de fondo del body para probar */
    body
    {
        background-color: tomato;
    }

    button
    {
        display: none;
    }
}